#!/usr/bin/env bash
# shellcheck disable=SC2034
# When updating arrconf/userr.conf.defaults.sh, manually review and update this example file to match any new or changed default variables.
# Make ONE copy named 'userr.conf', and edit as needed (default: '${ARR_DATA_ROOT}/${STACK}configs/userr.conf', must use path ≤4 deep under '$ARR_DATA_ROOT').
# Values here override the defaults from arrconf/userr.conf.defaults.sh, which loads first.

# --- Quick start — who & when ---
STACK="${STACK:-arr}"      # default: arr; project identifier for dirs/logs/labels
TIMEZONE="Australia/Sydney"      # default: Australia/Sydney; container timezone
PUID="$(id -u)"      # default: $(id -u); container user ID
PGID="$(id -g)"      # default: $(id -g); container group ID (match media group for collab)
ARR_PERMISSION_PROFILE="strict"      # default: strict; strict=600/700, collab=660/770

# --- Essential paths ---
ARR_DATA_ROOT="${HOME}/srv"      # default: ${HOME}/srv; stack data root (~/srv)
ARR_STACK_DIR="${ARR_DATA_ROOT}/${STACK}"      # default: ${ARR_DATA_ROOT}/${STACK}; compose + scripts
ARRCONF_DIR="${ARR_DATA_ROOT}/${STACK}configs"      # default: ${ARRCONF_DIR}; config & secrets dir

DOWNLOADS_DIR="${HOME}/Downloads"      # default: ${HOME}/Downloads; qBittorrent active downloads
COMPLETED_DIR="${DOWNLOADS_DIR}/completed"      # default: ${COMPLETED_DIR}; qBittorrent completed path

MEDIA_DIR="${ARR_DATA_ROOT}/media"      # default: ${ARR_DATA_ROOT}/media; library root under ARR_DATA_ROOT
TV_DIR="${MEDIA_DIR}/Shows"      # default: ${MEDIA_DIR}/Shows; Sonarr library
MOVIES_DIR="${MEDIA_DIR}/Movies"      # default: ${MEDIA_DIR}/Movies; Radarr library
# MUSIC_DIR="${MEDIA_DIR}/Music"      # default: ${MEDIA_DIR}/Music; Lidarr library
# SUBS_DIR="${MEDIA_DIR}/subs"      # default: ${MEDIA_DIR}/subs; optional Bazarr subtitles path

# --- Internal/resolution paths (rarely touched) ---
# ARR_ENV_FILE="${ARR_STACK_DIR}/.env"      # default: ${ARR_ENV_FILE}; generated secrets file
# ARR_DOCKER_DIR="${ARR_STACK_DIR}/dockarr"      # default: ${ARR_DOCKER_DIR}; Docker volumes & persistent data
# ARR_USERCONF_PATH="${ARRCONF_DIR}/userr.conf"      # default: ${ARRCONF_DIR}/userr.conf; location of this file
# ARR_LOG_DIR="${ARR_STACK_DIR}/logs"      # default: ${ARR_STACK_DIR}/logs; runtime/service logs
# ARR_INSTALL_LOG="${ARR_LOG_DIR}/${STACK}-install.log"      # default: ${ARR_LOG_DIR}/${STACK}-install.log; installer log path

# --- Network basics (local machine) ---
LAN_IP=        # default: empty; bind services to specific LAN IP (set reservation first)
LOCALHOST_IP="127.0.0.1"      # default: 127.0.0.1; loopback used by Gluetun control API
EXPOSE_DIRECT_PORTS="1"      # default: 1; publish WebUIs on http://${LAN_IP}:PORT (LAN_IP required)

# --- Ports (user-facing) ---
ARR_PORT_CHECK_MODE="enforce"      # default: enforce; port conflict handling (enforce/warn/skip/fix with warn fallback)
QBT_INT_PORT="8082"      # default: 8082; internal qBittorrent WebUI port
QBT_PORT="${QBT_INT_PORT}"      # default: ${QBT_INT_PORT} (8082); qBittorrent WebUI LAN port
QBT_BIND_ADDR="0.0.0.0"      # default: 0.0.0.0; qBittorrent WebUI bind address inside the container
QBT_ENFORCE_WEBUI="1"      # default: 1; keep WebUI bind/port enforced at startup and during health checks (set 0 to opt out)
SONARR_INT_PORT="8989"      # default: 8989; internal Sonarr WebUI port
SONARR_PORT="${SONARR_INT_PORT}"      # default: ${SONARR_INT_PORT} (8989); Sonarr WebUI LAN port
RADARR_INT_PORT="7878"      # default: 7878; internal Radarr WebUI port
RADARR_PORT="${RADARR_INT_PORT}"      # default: ${RADARR_INT_PORT} (7878); Radarr WebUI LAN port
LIDARR_INT_PORT="8686"      # default: 8686; internal Lidarr WebUI port
LIDARR_PORT="${LIDARR_INT_PORT}"      # default: ${LIDARR_INT_PORT} (8686); Lidarr WebUI LAN port
PROWLARR_INT_PORT="9696"      # default: 9696; internal Prowlarr WebUI port
PROWLARR_PORT="${PROWLARR_INT_PORT}"      # default: ${PROWLARR_INT_PORT} (9696); Prowlarr WebUI LAN port
BAZARR_INT_PORT="6767"      # default: 6767; internal Bazarr WebUI port
BAZARR_PORT="${BAZARR_INT_PORT}"      # default: ${BAZARR_INT_PORT} (6767); Bazarr WebUI LAN port
FLARR_INT_PORT="8191"      # default: 8191; internal FlareSolverr port
FLARR_PORT="${FLARR_INT_PORT}"      # default: ${FLARR_INT_PORT} (8191); FlareSolverr LAN port
SABNZBD_INT_PORT="8080"      # default: 8080; internal SABnzbd WebUI port
SABNZBD_PORT="${SABNZBD_INT_PORT}"      # default: ${SABNZBD_INT_PORT} (8080); SABnzbd LAN port
GLUETUN_CONTROL_PORT="8000"      # default: 8000; Gluetun control API port
GLUETUN_CONNECTIVITY_PROBE_URLS="https://api.ipify.org,https://ipconfig.io/ip,https://1.1.1.1/cdn-cgi/trace"      # default: https://api.ipify.org,https://ipconfig.io/ip,https://1.1.1.1/cdn-cgi/trace; external URLs used to verify VPN connectivity

# --- qBitTorrent Client credentials (change on first run) ---
QBT_USER="admin"      # default: admin; initial qBittorrent username
QBT_PASS="adminadmin"      # default: adminadmin; initial qBittorrent password

# --- VPN basics (connectivity) ---
SPLIT_VPN="1"      # default: 0=VPN for full stack; 1=restrict VPN to qBittorrent only
SERVER_COUNTRIES="Netherlands"      # default: Netherlands; ProtonVPN exit countries
# SERVER_NAMES=""      # default: empty; optionally pin Proton hosts (comma-separated)
PVPN_ROTATE_COUNTRIES="Singapore,Japan,Spain,Malaysia,Portugal,Romania,Switzerland,Luxembourg,Iceland,Australia"      # default: empty; rotation order for arr.vpn switch
GLUETUN_API_KEY=""      # default: empty; pre-seed Gluetun API key

# --- VPN auto-reconnect (optional) ---
VPN_AUTO_RECONNECT_ENABLED="0"      # default: 0; enable background VPN monitor
VPN_SPEED_THRESHOLD_KBPS="12"      # default: 12; kbps threshold before reconnect
VPN_CHECK_INTERVAL_MINUTES="20"      # default: 20; minutes between throughput samples
VPN_CONSECUTIVE_CHECKS="3"      # default: 3; low samples required before reconnecting
VPN_ALLOWED_HOURS_START=""      # default: empty; optional rotation window start hour
VPN_ALLOWED_HOURS_END=""      # default: empty; optional rotation window end hour
VPN_COOLDOWN_MINUTES="60"      # default: 60; cooldown after reconnect
VPN_MAX_RETRY_MINUTES="20"      # default: 20; retry budget before disabling
VPN_ROTATION_MAX_PER_DAY="6"      # default: 6; max automatic reconnects per day (0=unlimited)
VPN_ROTATION_JITTER_SECONDS="0"      # default: 0; random jitter added to reconnect timing

# --- PF timing (advanced; optional, never blocking) ---
PF_MAX_TOTAL_WAIT="60"      # default: 60; seconds to wait for forwarded port (legacy)
PF_POLL_INTERVAL="5"      # default: 5; seconds between Proton API checks (legacy)
PF_CYCLE_AFTER="30"      # default: 30; seconds before cycling Proton servers (legacy)
GLUETUN_PF_STRICT="0"      # default: 0; treat Proton PF timeouts as hard failures when 1
PF_ENABLE_CYCLE="1"      # default: 1; allow OpenVPN cycling while waiting on PF
PF_ASYNC_ENABLE="1"      # default: 1; run async PF worker automatically
PF_ASYNC_INITIAL_QUICK_WAIT="10"      # default: 10; quick polling window before cycling (seconds)
PF_ASYNC_TOTAL_BUDGET="240"      # default: 240; async worker timeout budget (seconds)
PF_ASYNC_POLL_INTERVAL="5"      # default: 5; seconds between async status checks
PF_ASYNC_CYCLE_INTERVAL="40"      # default: 40; minimum seconds between OpenVPN cycles
PF_ASYNC_MAX_CYCLES="3"      # default: 3; max OpenVPN cycles per async run
PF_ASYNC_STATE_FILE="pf-state.json"      # default: pf-state.json; async worker state file
PF_ASYNC_LOG_FILE="port-forwarding.log"      # default: port-forwarding.log; async worker log file

# --- SABnzbd (Usenet) ---
SABNZBD_ENABLED="0"      # default: 0; enable SABnzbd container/helper
SABNZBD_USE_VPN="0"      # default: 0; route SABnzbd through Gluetun
SABNZBD_HOST="${LOCALHOST_IP}"      # default: ${LOCALHOST_IP} (127.0.0.1); sab-helper host
SABNZBD_API_KEY="${SABNZBD_API_KEY:-REPLACE_WITH_SABNZBD_API_KEY}"      # default: empty; auto-hydrated from sabnzbd.ini
SABNZBD_CATEGORY="${STACK}"      # default: ${STACK}; helper job category
SABNZBD_TIMEOUT="15"      # default: 15; sab-helper API timeout (seconds)
ARRBASH_USENET_CLIENT="sabnzbd"      # default: sabnzbd; active Usenet client label

# --- *Arr & automation defaults (ConfigArr) ---
ENABLE_CONFIGARR="1"      # default: 1; enable ConfigArr sync container
ARR_VIDEO_MIN_RES="720p"      # default: 720p; minimum allowed resolution
ARR_VIDEO_MAX_RES="1080p"      # default: 1080p; maximum allowed resolution
ARR_EP_MIN_MB="250"      # default: 250; minimum episode size (MB)
ARR_EP_MAX_GB="5"      # default: 5; maximum episode size (GB)
ARR_TV_RUNTIME_MIN="45"      # default: 45; minutes to treat as standard TV
ARR_SEASON_MAX_GB="30"      # default: 30; season size cap (GB)
ARR_LANG_PRIMARY="en"      # default: en; preferred language
ARR_ENGLISH_ONLY="1"      # default: 1; prefer English-only releases
ARR_DISCOURAGE_MULTI="1"      # default: 1; penalise multi-audio releases
ARR_PENALIZE_HD_X265="1"      # default: 1; penalise HD x265 releases
ARR_STRICT_JUNK_BLOCK="1"      # default: 1; fully block junk releases
ARR_JUNK_NEGATIVE_SCORE="-1000"      # default: -1000; junk term penalty
ARR_X265_HD_NEGATIVE_SCORE="-200"      # default: -200; HD x265 penalty
ARR_MULTI_NEGATIVE_SCORE="-50"      # default: -50; multi-audio penalty
ARR_ENGLISH_POSITIVE_SCORE="50"      # default: 50; English release bonus
SONARR_TRASH_TEMPLATE="sonarr-v4-quality-profile-web-1080p"      # default: sonarr-v4-quality-profile-web-1080p; Sonarr TRaSH template
RADARR_TRASH_TEMPLATE="radarr-v5-quality-profile-hd-bluray-web"      # default: radarr-v5-quality-profile-hd-bluray-web; Radarr TRaSH template
ARR_MBMIN_DECIMALS="1"      # default: 1; decimal precision for minimum size rules
# --- ConfigArr custom format IDs (optional overrides; defaults in scripts/configarr-custom-formats.sh) ---
# ARR_CF_IDS_LQ=("9c11cd3f07101cdba90a2d81cf0e56b4" "90a6f9a284dff5103f6346090e6280c8")      # default: see helper script; Low Quality formats
# ARR_CF_IDS_LQ_TITLE=("e2315f990da2e2cbfc9fa5b7a6fcfe48" "e204b80c87be9497a8a6eaff48f72905")      # default: see helper script; Low Quality title matches
# ARR_CF_IDS_UPSCALED=("23297a736ca77c0fc8e70f8edd7ee56c" "bfd8eb01832d646a0a89c4deb46f8564")      # default: see helper script; Upscaled releases
# ARR_CF_IDS_LANGUAGE=("69aa1e159f97d860440b04cd6d590c4f" "0dc8aec3bd1c47cd6c40c46ecd27e846")      # default: see helper script; Not English language
# ARR_CF_IDS_MULTI=("7ba05c6e0e14e793538174c679126996" "4b900e171accbfb172729b63323ea8ca")      # default: see helper script; MULTi releases
# ARR_CF_IDS_X265=("47435ece6b99a0b477caf360e79ba0bb" "dc98083864ea246d05a42df0d05f81cc")      # default: see helper script; x265 (HD) releases

# --- Images (advanced users; specify tags in config) ---
# GLUETUN_IMAGE="qmcgaw/gluetun:v3.40.0"      # default: qmcgaw/gluetun:v3.40.0; override Gluetun container tag
# QBITTORRENT_IMAGE="lscr.io/linuxserver/qbittorrent:5.1.2-r2-ls415"      # default: lscr.io/linuxserver/qbittorrent:5.1.2-r2-ls415; override qBittorrent tag
# SONARR_IMAGE="lscr.io/linuxserver/sonarr:4.0.15.2941-ls291"      # default: lscr.io/linuxserver/sonarr:4.0.15.2941-ls291; override Sonarr tag
# RADARR_IMAGE="lscr.io/linuxserver/radarr:5.27.5.10198-ls283"      # default: lscr.io/linuxserver/radarr:5.27.5.10198-ls283; override Radarr tag
# LIDARR_IMAGE="lscr.io/linuxserver/lidarr:latest"      # default: lscr.io/linuxserver/lidarr:latest; override Lidarr tag
# PROWLARR_IMAGE="lscr.io/linuxserver/prowlarr:latest"      # default: lscr.io/linuxserver/prowlarr:latest; override Prowlarr tag
# BAZARR_IMAGE="lscr.io/linuxserver/bazarr:latest"      # default: lscr.io/linuxserver/bazarr:latest; override Bazarr tag
# FLARR_IMAGE="ghcr.io/flaresolverr/flaresolverr:v3.3.21"      # default: ghcr.io/flaresolverr/flaresolverr:v3.3.21; override FlareSolverr tag
# SABNZBD_IMAGE="lscr.io/linuxserver/sabnzbd:latest"      # default: lscr.io/linuxserver/sabnzbd:latest; override SABnzbd tag
# CONFIGARR_IMAGE="ghcr.io/raydak-labs/configarr:latest"      # default: ghcr.io/raydak-labs/configarr:latest; override ConfigArr tag
# QBT_DOCKER_MODS="ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest"      # default: ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest; Vuetorrent WebUI mod
QBT_AUTH_WHITELIST="${LAN_IP:+${LAN_IP}/32,}127.0.0.1/32,::1/128"      # default: 127.0.0.1/32,::1/128; CIDRs that bypass qBittorrent login

# --- Behaviour toggles ---
# ASSUME_YES="0"      # default: 0; skip confirmation prompts when scripting installs
# FORCE_ROTATE_API_KEY="0"      # default: 0; regenerate Gluetun API key next run
# REFRESH_ALIASES="0"      # default: 0; regenerate helper aliases only
ARR_COLOR_OUTPUT="1"      # default: 1; keep colorful CLI output (set 0 for monochrome)
